#!/bin/bash

echo Cleaning...
#Removes the dist folder so we can create a fresh one later.
rm -rf ./build

#mkdir dist/public
#touch dist/githash.txt

#Testing git commit comment!!!!!!1!!one!!!11!!!eleven

#If a git commit hash with the same value is found then this if sentence won't be launched.
#Creates a GIT_COMMIT and a GIT_URL from the repository on github.
if [ -z "$GIT_COMMIT" ]; then
	export GIT_COMMIT=$(git rev-parse HEAD)
	export GIT_URL=$(git config --get remote.origin.url)
fi

# Remove .git from url in order to get https link to repo (assumes https url for GitHub)
export GITHUB_URL=$(echo $GIT_URL | rev | cut -c 5- | rev)

#Puts the GIT_COMMIT into a .env file so the docker-compose.yaml can read this environmantle variable.
echo "GIT_COMMIT=$(echo $GIT_COMMIT)" > .env

#Copy files securely over to the EC2 machine hosted on AWS
#scp -o StrictHostKeyChecking=no -i "./ec2_instance/Credentials/gvendur88Admin-key-pair-euwest1.pem" ./{docker-compose.yaml,.env} ec2-user@172-31-16-19:~/
scp -o StrictHostKeyChecking=no -i "./ec2_instance/Credentials/gvendur88Admin-key-pair-euwest1.pem" ./docker-compose.yaml ec2-user@35.163.249.251:~/docker-compose.yaml
scp -o StrictHostKeyChecking=no -i "./ec2_instance/Credentials/gvendur88Admin-key-pair-euwest1.pem" ./.env ec2-user@35.163.249.251:~/.env



echo Building app
#Creates the build directory.
npm run build

rc=$?
if [[ $rc != 0 ]] ; then
	echo "Npm build failed with exit code " $rc
	exit $rc
fi

#Create a githash.txt file in the dist folder and put the GIT_COMMIT hash there.
cat > ./build/githash.txt <<_EOF_
$GIT_COMMIT
_EOF_

#Create the public directory inside the dist folder.
mkdir ./build/public
#Creates a version.html file inside the public folder for the html tags.
cat > ./build/public/version.html << _EOF_
<!doctype html>
<head>
	<title>App version information</title>
</head>
<body>
	<span>Origin:</span> <span>$GITHUB_URL</span>
	<span>Revision:</span> <span>$GIT_COMMIT</span>
	<p>
	<div><a href="$GITHUB_URL/commits/$GIT_COMMIT">History of current version</a></div>
</body>
_EOF_

#Copies a few files into the build folder for the Docker image.
cp ./Dockerfile ./build/
cp package.json ./build/
cp runNodeJS ./build/
cp docker-compose.yaml ./build/

#Station ourselves inside the build folder
cd build

echo Building docker image

#Build the docker image from here with the Dockerfile.
docker build -t gvendur88/tictactoe:$GIT_COMMIT .

rc=$?
if [[ $rc != 0 ]] ; then
	echo "Docker build failed " $rc
	exit $rc
fi

#Push the docker image onto the docker hub.
docker push gvendur88/tictactoe:$GIT_COMMIT
rc=$?
if [[ $rc != 0 ]] ; then
	echo "Docker push failed " $rc
	exit $rc
fi

echo "Done"

